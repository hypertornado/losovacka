// Generated by CoffeeScript 1.6.2
var Losovacka,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Losovacka = (function() {
  function Losovacka() {
    this.prepare_table = __bind(this.prepare_table, this);
    this.get_table_values = __bind(this.get_table_values, this);
    this.set_table_values = __bind(this.set_table_values, this);
    this.losovani_stop = __bind(this.losovani_stop, this);
    this.los = __bind(this.los, this);
    this.losovani_start = __bind(this.losovani_start, this);
    this.set_text = __bind(this.set_text, this);
    var _this = this;

    ({
      poradi: 0
    });
    this.prepare_table();
    $("#losuj").click(function() {
      return _this.losovani_start();
    });
  }

  Losovacka.prototype.set_text = function(text) {
    return $("#item").text(text);
  };

  Losovacka.prototype.losovani_start = function() {
    this.losovaci_pole = this.get_table_values();
    if (this.losovaci_pole.length === 0) {
      alert("Nejsou zadány žádné položky.");
      return;
    }
    this.poradi = 0;
    $("#table").hide();
    $("#losuj").hide();
    return this.los();
  };

  Losovacka.prototype.los = function() {
    var callback, maximum, time,
      _this = this;

    this.last_set = this.losovaci_pole[Math.floor(this.losovaci_pole.length * Math.random())];
    this.set_text(this.last_set);
    maximum = 5;
    if (this.poradi < maximum) {
      this.poradi += 1;
      callback = function() {
        return _this.los();
      };
      time = this.poradi + 100;
      return setTimeout(callback, time);
    } else {
      return this.losovani_stop();
    }
  };

  Losovacka.prototype.losovani_stop = function() {
    var el, val, _i, _len, _ref;

    el = {};
    _ref = this.losovaci_pole;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      val = _ref[_i];
      if (val === this.last_set) {
        this.last_set = null;
      } else {
        if (el[val] === void 0) {
          el[val] = 1;
        } else {
          el[val] += 1;
        }
      }
    }
    this.set_table_values(el);
    this.poradi = 0;
    $("#table").show();
    return $("#losuj").show();
  };

  Losovacka.prototype.set_table_values = function(values) {
    var i, jmena, name, pocet, _i, _len, _ref, _results;

    pocet = $(".pocet");
    jmena = $(".jmeno");
    pocet.val(0);
    jmena.val("");
    i = 0;
    _ref = Object.getOwnPropertyNames(values);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      if (name !== void 0) {
        $(pocet[i]).val(values[name]);
        $(jmena[i]).val(name);
        _results.push(i += 1);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  Losovacka.prototype.get_table_values = function() {
    var data, i, j, jmena, number, pocty, text, _i, _j, _ref, _ref1;

    data = [];
    pocty = $(".pocet");
    jmena = $(".jmeno");
    for (i = _i = 0, _ref = pocty.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      number = parseInt($(pocty.get(i)).val());
      text = $(jmena.get(i)).val();
      if (number > 0 && text.length > 0) {
        for (j = _j = 0, _ref1 = number - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
          data.push(text);
        }
      }
    }
    return data;
  };

  Losovacka.prototype.prepare_table = function() {
    var i, _i, _results;

    _results = [];
    for (i = _i = 1; _i <= 100; i = ++_i) {
      _results.push($("#table").append("<tr class='real'><td><input type='number' class='pocet' value='0'></td><td><input class='jmeno' style='width: 300px;'></td>"));
    }
    return _results;
  };

  return Losovacka;

})();

$(document).ready(function() {
  return new Losovacka();
});
